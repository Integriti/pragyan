Pragyan CMS v3.0 - Developer's Guide
=======================================================================

:::::::::::::::::::::::::::::::: Index ::::::::::::::::::::::::::::::::

1) Installation Instructions
2) Reinstallation Instructions
3) Coding Guidelines
	+ Security
	+ Portability
	+ Uniformity
	+ Optimization



______________________________________________________________________

+++++++++ INSTALLATION INSTRUCTIONS ++++++++++++++++++++++++++++++++++
______________________________________________________________________

For those who have downloaded a nightly build of Pragyan CMS v3, and
doing a fresh reinstall please follow the following steps before you
install the CMS (Note that this is NOT for the users who have 
downloaded an official release from Pragyan CMS Sourceforge.net
home page, those users can directly refer to INSTALL/INSTALL.txt)  :

1) Delete all the contents of the cms/config.inc.php file
2) Delete the .htaccess file in the root directory of Pragyan CMS
3) Rename the htaccess-dist file to .htaccess in the root directory 
(If you're using Windows, use Notepad++ to save the file as .htaccess)
4) Follow the instructions in the INSTALL/install.txt file.


______________________________________________________________________

+++++++++ REINSTALLATION INSTRUCTIONS ++++++++++++++++++++++++++++++++++
______________________________________________________________________

To safely uninstall Pragyan CMS so that you can reinstall from the 
same files, do the following :

1) If you're in Linux-based operating system, go to the root directory
of Pragyan CMS and execute the following script like this :
>sh scripts/uninstall.sh
Next, delete the old database and create a new one.
2) If you're NOT in a Linux-based operating system, simply follow the 
steps mentioned in INSTALLATION INSTRUCTIONS.


____________________________________________________________________

+++++++++ CODING GUIDELINES ++++++++++++++++++++++++++++++++++++++++++
______________________________________________________________________
	
	Please follow the following rules strictly while coding for 
	Pragyan CMS
	______________________________________________________________
	
	::::::::::::::::::::::::: SECURITY :::::::::::::::::::::::::::
	______________________________________________________________
	
	
	* Dangerous Variables = $_GET, $_POST, $_REQUEST
	
	* Protection Function = escape(), safe_html() 
	(definitions are available in common.lib.php)

	===== RULE 1 =====
	
	Use the escape() function for every dangerous variable
	in any assignment operation i.e. when a PHP variable is being 
	assigned a value of a dangerous variable using '=' operator. 
	Something like $var=$_GET['hi'] should be made to 
	$var=escape($_GET['hi']). This check is to prevent attacks
	of type SQL Injection. 
	
	===== RULE 2 =====
	
	Be careful not to escape the same variable TWICE.

	===== RULE 3 =====
	
	Don't use escape() function when a dangerous variable 
	is used in a conditional operation i.e in a IF, FOR, WHILE or
	'?:' condition statement.

	===== RULE 4 =====
	
	In a MySQL query, put the table name and column names
	within ` ` escape quotes. e.g. "SELECT apple FROM tree WHERE 
	apple=2" should be "SELECT `apple` FROM `tree` WHERE `apple`=2"

	===== RULE 5 =====
	
	Use the safe_html() function whenever a dangerous variable 
	is directly or indirectly being echoed or printed onto the 
	screen. This is to prevent XSS attack. e.g. echo $_GET['hi'];
	should be echo safe_html($_GET['hi']);

	===== EXAMPLES ===== 

	Vulnerable Code : 
	-----------------

	if(isset($_GET['hello']))
		$var = $_GET['hello'];
	$apple = $_POST['bye'];
	echo $var.$apple.$_GET['me'];
	$safe = $_REQUEST['me'];
	$query = "SELECT * FROM $var WHERE column = $safe 
	AND ".$_GET['wow']." = '{$_POST['next']}'";
	
	mysql_query($query);
	echo $query;


	Secure Code :
	------------- 

	if(isset($_GET['hello']))
		$var = escape($_GET['hello']);
	$apple = escape($_POST['bye']); 
	echo safe_html($var.$apple.$_GET['me']);
	$safe = escape($_REQUEST['me']);
	$query = "SELECT * FROM `$var` WHERE `column` = $safe AND `".
	escape($_GET['wow'])."` = '".escape($_POST['next'])."'";
	mysql_query($query);
	echo safe_html($query);
	
	
	______________________________________________________________
	
	::::::::::::::::::::::: PORTABILITY ::::::::::::::::::::::::::
	______________________________________________________________
	
	===== RULE 1 =====
	
	When creating Templates, don't use the PHP echo short form,
	use the entire echo statement. For example - <?=$HELLO?>
	should be converted to <? echo $HELLO; ?>
	
	===== RULE 2 =====
	
	Avoid using the OS-specific commands in functions like exec().
	In case its impossible to avoid it, try to find an alternative
	for Windows and/or Linux-bases OS also and implement it.
	
	
